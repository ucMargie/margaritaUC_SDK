import { DefaultUIButtons } from './interfaces.ui.public';
import { SECOND_LAYER_TRIGGER } from '../../SettingsV2/enums';
export interface TCFButtons extends BaseButtons, DefaultUIButtons {
    manageSettings: {
        label: string;
    };
    showVendorTab: {
        label: string;
    };
}
export interface TCFFirstLayer extends BaseFirstLayer {
    description: {
        additionalInfo: string | null;
        default: string;
        resurfaceNote: string | null;
    };
    disclaimer: {
        serviceScope: string;
    };
    hideButtonDeny: boolean | null;
    hideNonIabPurposes: boolean;
    hideToggles: boolean;
    showDescriptions: boolean;
}
export interface TCFSecondLayer extends BaseSecondLayer {
    hideButtonDeny: boolean | null;
    hideLegitimateInterestToggles: boolean;
    hideToggles: boolean;
    showToggleAllVendors: boolean;
    tabs: {
        purposes: {
            label: string;
        };
        vendors: {
            label: string;
        };
    };
}
export interface TCFToggles {
    consent: {
        label: string;
    };
    legitimateInterest: {
        label: string;
    };
    specialFeaturesToggle: {
        onLabel: string;
        offLabel: string;
    };
}
export interface DefaultButtonProps {
    isEnabled?: boolean;
    label: string;
}
export interface BaseButtons {
    save: DefaultButtonProps;
}
export interface ButtonCustomization {
    backgroundColor: string | null;
    textColor: string | null;
}
export interface FontCustomization {
    family: string;
    size: number;
}
export interface ToggleCustomization {
    backgroundColor: string;
    iconColor: string;
}
export interface FirstLayerCustomization {
    secondLayerTrigger: SECOND_LAYER_TRIGGER;
}
export interface BaseFirstLayer {
    description: Record<string, unknown>;
    isOverlayEnabled: boolean;
    title: string;
}
export interface BaseLabels {
}
export interface BaseLanguage {
    available: string[];
    selected: string;
}
export interface BaseLinks {
    cookiePolicy: {
        ariaLabel: string;
        label: string | null;
        url: string | null;
    };
    imprint: {
        ariaLabel: string;
        label: string | null;
        url: string | null;
    };
    privacyPolicy: {
        ariaLabel: string;
        label: string | null;
        url: string | null;
    };
}
export interface BasePoweredBy {
    isEnabled: boolean;
    /** Currently non-customizable. Value set as: "Powered by" (non-translated) */
    label: string;
    partnerUrl: string | null;
    partnerUrlLabel: string | null;
    urlLabel: string;
    /** Currently non-customizable. Value set as: "Usercentrics Consent Management" (non-translated) */
    url: string;
}
export interface BasePrivacyButton {
    iconUrl: string | null;
    isEnabled: boolean;
    position: string;
}
export interface BaseSecondLayer {
    description: string;
    isOverlayEnabled: boolean;
    tabs: Record<string, unknown>;
    title: string;
}
