import { BaseButtons, BaseLanguage, BaseLinks, BasePoweredBy, BasePrivacyButton, TCFButtons, TCFFirstLayer, TCFSecondLayer, TCFToggles } from './interfaces.ui';
import { CcpaButtons, CcpaFirstLayer, CcpaSecondLayer, Customization, DefaultTCFGeneralLabels, DefaultUIButtons, DefaultUIFirstLayer, DefaultUISecondLayer, ShowSecondLayerButton } from './interfaces.ui.public';
import { CookieInformationLabels, DefaultGeneralLabels, DefaultServiceLabels } from '../../SettingsV2/Labels/interfaces';
import { AriaLabelsTranslation } from '../../Api/interfaces';
export interface BaseUISettings {
    customCss: string | null;
    customization: Customization;
    isEmbeddingsEnabled: boolean;
    language: BaseLanguage;
    links: BaseLinks;
    privacyButton: BasePrivacyButton;
    poweredBy: BasePoweredBy;
    showCookieInformation: boolean;
}
export interface CcpaUISettings extends BaseUISettings {
    ariaLabels: AriaLabelsTranslation;
    buttons: CcpaButtons;
    firstLayer: CcpaFirstLayer;
    labels: DefaultUILabels;
    secondLayer: CcpaSecondLayer;
}
declare type DefaultButtons = BaseButtons & DefaultUIButtons & ShowSecondLayerButton;
interface DefaultFirstLayer extends DefaultUIFirstLayer {
    hideButtonDeny: boolean;
    isCategoryTogglesEnabled: boolean;
    isLanguageSelectorEnabled: boolean;
    showCnilDenyLink: boolean;
}
export interface DefaultUISettings extends BaseUISettings {
    ariaLabels: AriaLabelsTranslation;
    buttons: DefaultButtons;
    firstLayer: DefaultFirstLayer;
    labels: DefaultUILabels;
    secondLayer: DefaultUISecondLayer;
}
export interface DefaultCnil {
    denyLabel?: string;
}
export interface DefaultUILabels {
    cookieInformation: CookieInformationLabels;
    general: DefaultGeneralLabels;
    service: DefaultServiceLabels;
    cnil: DefaultCnil;
}
export interface TCFLabels {
    cookieInformation: CookieInformationLabels;
    general: DefaultTCFGeneralLabels;
    nonTCFLabels: DefaultUILabels;
    vendor: {
        features: string;
        legitimateInterest: string;
        privacyPolicy: string;
        purposes: string;
        specialFeatures: string;
        specialPurposes: string;
        toggleAll: string;
    };
}
export interface TCFUISettings extends BaseUISettings {
    ariaLabels: AriaLabelsTranslation;
    buttons: TCFButtons;
    firstLayer: TCFFirstLayer;
    labels: TCFLabels;
    secondLayer: TCFSecondLayer;
    toggles: TCFToggles;
}
export declare type UISettings = CcpaUISettings | DefaultUISettings | TCFUISettings;
export interface Settings {
    controllerId: string;
    googleConsentMode: boolean;
    id: string;
    isCcpaEnabled: boolean;
    isTcfEnabled: boolean;
    reshowBanner: number;
    ui: UISettings;
    version: string;
}
export {};
