import { API_COMMANDS } from '../../enums/Ccpa/enums.public';
import { LEGACY_CCPA_REGION } from '../../../Api/enums';
import { STRING_CHARACTER } from '../../enums/Ccpa/enums';
export interface CcpaOptions {
    iabAgreementExists: boolean;
    isActive: boolean;
    isOptedOut?: boolean;
    region: LEGACY_CCPA_REGION;
    reshowAfterDays: number;
    showOnPageLoad: boolean;
    getIsOptedOut: () => boolean;
    setCcpaStorage: (isOptedOut: boolean, isNoticeGiven?: STRING_CHARACTER) => void;
    setIsOptedOut: (optedOut: boolean | string) => void;
}
export declare type GlobalFunction = (command: API_COMMANDS, version: number, callback: GlobalCallback) => void;
export declare type GlobalCallback = (data: GlobalCallbackData | null, success: boolean) => void;
export interface GlobalCallbackData {
    uspString: string | null;
    version: number | null;
}
